---

type Props = {
  backgroundColor?: string;
};

const { backgroundColor } = Astro.props as Props;
---
<header class="header" style={`background-color: ${backgroundColor};`}>
  <div class="logo">
    <a href="/">
      <div class="logo-container">
        <img class="logos" src="../../public/huh.png" alt="NT Bolig">
        <span>NT Bolig</span>
      </div>
    </a>    
  </div>
  <nav class="site-navigation">
    <ul class="nav">
      <li><a href="/prosjekter/">Prosjekter</a></li> 
      <li><a href="/om-oss/">Om oss</a></li> 
      <li><a href="/kontakt-oss/">Kontakt oss</a></li> 
    </ul>
  </nav>
  <div class="mobile-nav-toggle">
    <div class="bar"></div>
    <div class="bar"></div>
    <div class="bar"></div>
  </div>
  <div class="mobile-nav">
    <ul class="nav">
      <li><a href="/prosjekter/">Prosjekter</a></li> 
      <li><a href="/om-oss/">Om oss</a></li> 
      <li><a href="/kontakt-oss/">Kontakt oss</a></li> 
    </ul>
  </div>
</header>

<script>
  const mobileNavToggle = document.querySelector('.mobile-nav-toggle');
  const mobileNav = document.querySelector('.mobile-nav');

  mobileNavToggle?.addEventListener('click', () => {
    mobileNav?.classList.toggle('active');
  });
</script>

<style>    
  .header {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    z-index: 1000;
    border-bottom: 1px solid rgb(199, 193, 193);
  }
  
  .logo-container {
    display: flex;
    align-items: center;
    transition: transform 0.2s ease;
  }

  .logo-container:hover {
    transform: scale(1.1);
  }

  .logo-container span {
    margin-top: 8px;
  }

  a {
    text-decoration: none;
    color: white;
  }
  
  .logos {
    height: 65px;
    width: 80px;
  }

  span {
    font-weight: 700;
  }

  @media (max-width: 768px) {
  .logos {
    height: 45px;
    width: 60px;
  }
}

  .site-navigation ul {
    display: flex;
    list-style: none;
  }

  .site-navigation li {
    margin: 0 12px 0 12px;
    transition: transform 0.3s ease;
  }

  .nav li:not(:last-child) {
    border-right: 1px solid gray;
    padding-right: 15px;
  }

  .site-navigation a {
    text-decoration: none;
    color: lightgray;
    position: relative;
    overflow: hidden;
  }

  .site-navigation a:hover {
    color: white;
  }

  .site-navigation a::after {
    content: '';
    position: absolute;
    bottom: -1px;
    left: 0;
    width: 100%;
    height: 2px;
    background-color: white;
    transform: scaleX(0);
    transition: transform 0.2s ease;
  }

  .site-navigation a:hover::after {
    transform: scaleX(1);
  }

  /* Mobile Navigation */
  .mobile-nav-toggle {
    display: none;
    flex-direction: column;
    justify-content: space-between;
    height: 16px;
    cursor: pointer;
    margin-top: 8px;
  }

  .bar {
    width: 24px;
    height: 2px;
    background-color: white;
  }

  .mobile-nav {
    display: none;
    position: absolute;
    top: 50px;
    height: 100vh;
    width: 100%;
    background-color: rgb(234, 229, 229);
    border-radius: 8px;
    margin-top: 18px;

  }

  .mobile-nav ul {
    list-style: none;
    text-align: center;
  }

  .mobile-nav li {
    border-bottom: 1px solid gray;
    padding: 14px;
    margin: 14px;
  }

  .mobile-nav a {
    color: black;
  }

  .mobile-nav a:hover {
    background-color: #f5f5f5; /* Add this line */
  }

  .mobile-nav.active {
    display: block;
  }

  @media (max-width: 768px) {
    .site-navigation {
      display: none;
    }
    
    .mobile-nav-toggle {
      display: flex;
    }
  }
</style>
